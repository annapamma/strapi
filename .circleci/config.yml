version: 2.1    

# end to end testing template
e2e_tests: &e2e_tests
    - run:
        name: 'Run E2E Tests'
        command: |
            yarn run -s test:generate-app -- ${DB_STRING}
            yarn run -s test:start-app & ./node_modules/.bin/wait-on http://localhost:1337
            yarn run -s test:e2e

# Define the jobs
jobs:
    build:
        working_directory: ~/app
        docker:
            - image: circleci/node:10
        steps:
            - checkout
            - run:
                name: yarn setup
                command: yarn setup
            - run:
                name: yarn global add -g wait-on
                command: yarn global add -g wait-on
            # - save_cache:
            #     key: yarn-packages-{{ checksum "yarn.lock" }}
            #     paths:
            #         - ~/.cache/yarn                
            - save_cache:
                key: dependency-cache-app{{ checksum "package.json" }}
                paths:
                    - ~/app
            - save_cache:
                key: dependency-cache-npm{{ checksum "package.json" }}
                paths:
                    - ~/.npm
            - save_cache:
                key: dependency-cache-cache{{ checksum "package.json" }}
                paths:
                    - ~/.cache
                    
    test:
        working_directory: ~/app
        docker:
            - image: circleci/node:10
        steps:
            - checkout
            - restore_cache:
                key: dependency-cache-app{{ checksum "package.json" }}
            - restore_cache:
                key: dependency-cache-npm{{ checksum "package.json" }}
            - restore_cache:
                key: dependency-cache-cache{{ checksum "package.json" }}
            # - restore_cache:
            #     key: yarn-packages-{{ checksum "yarn.lock" }}
            - run:
                name: test
                #command: sudo node ./node_modules/.bin/snyk auth ${SNYK_TOKEN} && sudo npm run test:snyk
                command: yarn run -s test:snyk
            - run:
                name: 'Lint / Unit Tests'
                command: |
                  yarn run -s lint
                  yarn run -s test:unit
                  yarn run -s test:front

    e2e_tests_postgres:
        working_directory: ~/app
        environment:
            DB_STRING: '--dbclient=postgres --dbhost=localhost --dbport=5432 --dbname=strapi_test --dbusername=postgres --dbpassword='
        docker:
            - image: circleci/node:10
            - image: circleci/postgres:9.6-alpine        
        steps:        
            - checkout
            - restore_cache:
                key: dependency-cache-app{{ checksum "package.json" }}
            - restore_cache:
                key: dependency-cache-npm{{ checksum "package.json" }}
            - restore_cache:
                key: dependency-cache-cache{{ checksum "package.json" }}
            # - restore_cache:
            #     key: yarn-packages-{{ checksum "yarn.lock" }}
            - run:
                name: Installing Dependencies
                command: |
                    #yarn global add -g wait-on
                    yarn
                    sudo apt-get install postgresql-client
            - run:                
                command: psql -c 'create database strapi_test;' -U postgres -h localhost -p 5432
            - <<: *e2e_tests            
        

    # e2e_test_mysql:
    #     docker:
    #         - image: circleci/node:11.14.0
    #         - image: circleci/mysql

    # e2e_test_sqllite:
    #     docker:
    #         - image: circleci/node:11.14.0
    #         - image: circleci/postgres:9.6-alpine

    # e2e_test_mongo:
    #     docker:
    #         - image: circleci/node:11.14.0
    #         - image: circleci/postgres:mongo

workflows:
  version: 2
  build_and_test:
    jobs:   
        - build
        - test:
            requires:
                - build
        - e2e_tests_postgres:
            requires:
                - build