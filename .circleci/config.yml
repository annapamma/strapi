# test new UI
version: 2.0    

# Define the jobs
jobs:
    build:
        working_directory: ~/app
        docker:
            - image: circleci/node:10
        steps:
            - checkout
            - restore_cache:
                key: dependency-cache-app{{ checksum "package.json" }}
            - restore_cache:
                key: dependency-cache-npm{{ checksum "package.json" }}
            - restore_cache:
                key: dependency-cache-cache{{ checksum "package.json" }}
            - run:
                name: yarn setup
                command: yarn setup
            - run:
                name: yarn global add -g wait-on
                command: yarn global add -g wait-on            
            - save_cache:
                key: dependency-cache-app{{ checksum "package.json" }}
                paths:
                    - ~/app
            - save_cache:
                key: dependency-cache-npm{{ checksum "package.json" }}
                paths:
                    - ~/.npm
            - save_cache:
                key: dependency-cache-cache{{ checksum "package.json" }}
                paths:
                    - ~/.cache
            - persist_to_workspace:
                root: ~/
                paths:
                    - app
                    
    test:
        working_directory: ~/app
        docker:
            - image: circleci/node:10        
        steps:
            - attach_workspace:
                at: ~/
            - run:
                name: test
                command: yarn run -s test:snyk
            - run:
                name: 'Lint / Unit Tests'
                command: |
                  yarn run -s lint
                  yarn run -s test:unit
                  yarn run -s test:front
    e2e_tests_postgres:
        working_directory: ~/app
        environment:
            DB_STRING: '--dbclient=postgres --dbhost=localhost --dbport=5432 --dbname=strapi_test --dbusername=postgres --dbpassword='
        docker:
            - image: circleci/node:10
            - image: circleci/postgres:9.6-alpine        
        steps:        
            - attach_workspace:
                at: ~/
            - run:
                name: Installing Dependencies
                command: |
                    sudo apt-get install postgresql-client
            - run:                
                command: psql -c 'create database strapi_test;' -U postgres -h localhost -p 5432
            - run:
                name: 'Run E2E Tests'
                command: |
                    yarn run -s test:generate-app -- ${DB_STRING}
                    yarn run -s test:start-app & ./node_modules/.bin/wait-on http://localhost:1337
                    yarn run -s test:e2e           

    e2e_tests_mysql:
        working_directory: ~/app        
        environment:
            DB_STRING: '--dbclient=mysql --dbhost=localhost --dbport=3306 --dbname=strapi_test --dbusername=circleci --dbpassword=passw0rd'
        docker:
            - image: circleci/node:10
            - image: circleci/mysql
              command: [--default-authentication-plugin=mysql_native_password]
              environment:
                    MYSQL_ROOT_PASSWORD: rootpw
                    MYSQL_DATABASE: strapi_test
                    MYSQL_USER: circleci
                    MYSQL_PASSWORD: passw0rd
        steps:        
            - attach_workspace:
                at: ~/
            - run:
             # Our primary container isn't MYSQL so run a sleep command until it's ready.
                name: Waiting for MySQL to be ready
                command: |
                    for i in `seq 1 10`;
                    do
                    nc -z 127.0.0.1 3306 && echo Success && exit 0
                    echo -n .
                    sleep 1
                    done
                    echo Failed waiting for MySQL && exit 1
            - run:
                name: Installing Dependencies
                command: sudo apt install mysql-client
            - run:
                name: 'Run E2E Tests'
                command: |
                    yarn run -s test:generate-app -- ${DB_STRING}
                    yarn run -s test:start-app & ./node_modules/.bin/wait-on http://localhost:1337
                    yarn run -s test:e2e

    e2e_tests_sqllite:
        working_directory: ~/app
        environment:
            DB_STRING: '--dbclient=sqlite --dbfile=./tmp/data.db'
        docker:
            - image: circleci/node:10
        steps:        
            - attach_workspace:
                at: ~/
            - run:
                name: 'Run E2E Tests'
                command: |
                    yarn run -s test:generate-app -- ${DB_STRING}
                    yarn run -s test:start-app & ./node_modules/.bin/wait-on http://localhost:1337
                    yarn run -s test:e2e

    e2e_tests_mongo:
        working_directory: ~/app
        environment:
            DB_STRING: '--dbclient=mongo --dbhost=localhost --dbport=27017 --dbname=strapi_test --dbusername= --dbpassword='
        docker:
            - image: circleci/node:10
            - image: circleci/mongo:4
        steps:        
            - attach_workspace:
                at: ~/
            - run:
                name: 'Run E2E Tests'
                command: |
                    yarn run -s test:generate-app -- ${DB_STRING}
                    yarn run -s test:start-app & ./node_modules/.bin/wait-on http://localhost:1337
                    yarn run -s test:e2e

workflows:
  version: 2
  build:
    jobs:   
        - build
        - test:
            requires:
                - build
        - e2e_tests_postgres:
            requires:
                - build
        - e2e_tests_mysql:
            requires:
                - build
        - e2e_tests_sqllite:
            requires:
                - build
        - e2e_tests_mongo:
            requires:
                - build
